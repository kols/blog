<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kanedou.me</title>
    <description></description>
    <link>http://kanedou.me</link>
    <atom:link href="http://kanedou.me/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>go composition</title>
        <description>&lt;p&gt;go 没有 inheritance，只有基于 interface 的 composition，但它提供了类似继承的 embedding 来使这一过程尽可能简洁。这里就用具体示例来说一下如何做。&lt;/p&gt;

&lt;p&gt;假设我需要两个图片 URL 生成器，它能根据 http 请求来源生成相应的图片 URL 集合，例如从 mobile 来的请求我为其生成 original, cover 两个 URL，而从 desktop 来的请求则生成 original, preview 和 thumbnail 三个 URL。&lt;/p&gt;

&lt;p&gt;整理一下需求：首先是 original, cover, preview 及 thumbnail 这四个基础的实际生成 URL 的生成器，然后是 mobile 及 desktop 这两个构筑在前四者之上的抽象分类。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;go&quot;&gt;&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OriginalUrlBuilder&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;OriginalUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CoverUrlBuilder&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;CoverUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PreviewUrlBuilder&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;PreviewUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ThumbnailUrlBuilder&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ThumbnailUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里我们先声明了四种不同 URL 的 interface，这是为了之后的 composition 更方便。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;go&quot;&gt;&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OriginalUrlBuilder&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;OriginalUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Original&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Image&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// a model, the source we use to generate the URL, just a stab to complete the logic, pay no attention to it.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Original&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OriginalUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// generate original URL}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CoverUrlBuilder&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;CoverUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cover&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Image&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CoverUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// generate cover URL}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PreviewUrlBuilder&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;PreviewUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Preview&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Image&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Preview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PreviewUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// generate preview URL}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ThumbnailUrlBuilder&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ThumbnailUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Thumbnail&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Image&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Thumbnail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ThumbnailUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// generate thumbnail URL}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;声明各个具体的 builder 并实现 interface。接下来是两个分类。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;go&quot;&gt;&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Desktop&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Original&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Preview&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Thumbnail&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Mobile&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Original&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Cover&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里的实现使用了 struct embedding，这里内嵌了基础 builder 的 pointer，效果是直接将内嵌 struct 的所有 method 带入新声明的 struct。这里有几点需要注意：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;内嵌的 struct 需要 initialize&lt;/li&gt;
&lt;li&gt;在所声明 struct 上调用内嵌 struct 的 method 时其 receiver 为内嵌的 struct 而非其自身：&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;go&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// when we call embedded method directly on the outer struct&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CoverUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// it&amp;#39;s exactly like first defining this book-keeping method on the outer struct and then calling it&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Desktop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CoverUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Cover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CoverUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// receiver is `Cover&amp;#39; not `Desktop&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CoverUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;内嵌 struct 的 field name 为其 unqualified name，即去除 package name 后的部分。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://golang.org/doc/effective_go.html#embedding&quot;&gt;http://golang.org/doc/effective_go.html#embedding&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;之后看一下如何实际使用这些 URL builder。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;go&quot;&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;GetUrlBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reqType&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;builder&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Image&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reqType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;desktop&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Original&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Preview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Thumbnail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;builder&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Desktop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;mobile&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Original&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Cover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;builder&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Mobile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;panic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Oooops, don&amp;#39;t know which type it is!&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;reqType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;GetRequestTypeFromNowhere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// fake&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;urlBuilder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;GetUrlBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reqType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reqType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;desktop&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;urlBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;OriginalUrlBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;OriginalUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// original URL&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;urlBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PreviewUrlBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PreviewUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// preview URL&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;urlBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ThumbnailUrlBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ThumbnailUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// thumbnail URL&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;mobile&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;urlBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;OriginalUrlBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;OriginalUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// original URL&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;urlBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CoverUrlBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CoverUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// cover URL&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;GetUrlBuilder()&lt;/code&gt; 返回 &lt;code&gt;interface{}&lt;/code&gt;，即使用者不知道所返回的究竟是 &lt;code&gt;Desktop&lt;/code&gt; 还是 &lt;code&gt;Mobile&lt;/code&gt;。因为使用者只需负责使用就可以了，&lt;code&gt;desktop.(PreviewUrlBuilder).PreviewUrl()&lt;/code&gt; 对所返回的 builder 先进行 type assertion 再调用相应 interface 中的方法，即我需要一个 preview URL 则我就调用 &lt;code&gt;PreviewUrlBuilder&lt;/code&gt; 中的 &lt;code&gt;PreviewUrl()&lt;/code&gt; 方法来获取这样一个 URL，除此以外我不需要知道其他任何信息，builder 的种类为何对使用者而言是透明的。而这也是最初声明四个不同基础 builder 的 interface 的好处之一。&lt;/p&gt;

&lt;p&gt;最后总结一下这样的程序结构的优点：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;方便新增抽象分类，例如 &lt;code&gt;PadImageUrlBuilder&lt;/code&gt;，使用基础的 builder 组合一下即可。&lt;/li&gt;
&lt;li&gt;可根据需要实现多个同种基础 builder，只需实现其 interface 即可，在多个 builder 之间动态替换也没问题。&lt;/li&gt;
&lt;li&gt;新增基础 builder 也很容易，声明 interface 并实现，然后在抽象分类中将其 embed 进去即可。&lt;/li&gt;
&lt;li&gt;抽象分类对 builder 使用者完全透明，其只需 &lt;code&gt;GetUrlBuilder()&lt;/code&gt; 后根据实际需要 type assertion 至相应基础 builder 并调用其方法即可，不需知道这是 desktop 还是 mobile builder。&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;go 应用了这两条面向对象设计原则：&lt;/p&gt;

&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;Favor composition over inheritance.&lt;/li&gt;
&lt;li&gt;Program to an interface, not an implementation.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;因此其虽非面向对象语言但是仍然有面向对象的痕迹，只是摒弃了设计者所不中意的部分（inheritance），并强调了他们喜欢的地方。在 go 中实现一个设计模式并非水到渠成的，但它所提供的概念及抽象总是在引导你试着去运用，明确地或是潜移默化地。&lt;/p&gt;

&lt;p&gt;go 是给人一种相当朴素感觉的语言，当现代语言都在追求各种各样花哨形式（以给程序员提供乐趣，当然也确实很有乐趣）的时候，它仍以一种质朴平淡甚至近乎无聊的形式呈现自己，给你它所为你选择的它所认为重要的，显然漂亮的语法或 syntax sugar 并不在列，然而它居然也是有乐趣的，从少获得多，less is more，这也是另一种我所欣赏的审美态度。&lt;/p&gt;
</description>
        <pubDate>Sun, 14 Apr 2013 16:47:00 +0800</pubDate>
        <link>http://kanedou.me/2013/04/go-composition/</link>
        <guid isPermaLink="true">http://kanedou.me/2013/04/go-composition/</guid>
      </item>
    
      <item>
        <title>『Bioshock Infinite』带来的</title>
        <description>&lt;p&gt;&lt;img src=&quot;http://pic.yupoo.com/kols_v/CJWMsjZA/medium.jpg&quot; alt=&quot;Bioshock Infinite&quot; /&gt;&lt;/p&gt;

&lt;p&gt;游戏作为艺术品是个矛盾体，它的意义需要娱乐来承载，虽然有些电影也是如此，但因为长度往往十个小时起算，因此在游戏中两者并不总是相容的。一点不娱乐的电影可称之为文艺片，但纯文艺而不娱乐大众的游戏估计从来就难以得见天日。因此 『Bioshock』 不断在枪林弹雨之间穿插 Voxophone 录音、Booker 与 Elizabeth 的互动、人性与宿命的考察，枪炮杀戮是前提，维持娱乐水准，后者是内涵，展现制作人真正想告诉你的东西。但由于时长问题，前者却一定是喧宾夺主地占据了玩家最大部分的时间——因此传言中 &lt;abbr title=&quot;Metal Gear Solid 4&quot;&gt;MGS 4&lt;/abbr&gt; 大量过场剧情将玩家操作挤压至接近次要地位的情况，一定是小岛秀夫感受到了这种娱乐与内涵的不调和而做出的回应，但就是这样很简单（当然不简单）地将两者的比例改变一下，也会招致众多玩家的不满，因为游戏，它的第一要素依旧是玩（得爽）——而即使是这样，对于满足快感之余的叙事内容细节的考究、环环相扣的铺垫、精辟带有哲学意味的独白，仍然将整个作品的走向带至艺术品而非娱乐品的行列之中。&lt;/p&gt;

&lt;p&gt;即便玩往往是肤浅的，但其体验并非一定与叙事、内涵相矛盾。『旺达与巨像』将对于故事的体验融入到了娱乐内容之中，你在巨像的庞大身躯上攀爬、跌落，狂奔、飞翔，这体验本身就是一种叙事，因为作者把你变成了旺达，你通过手柄感受他的艰难旅途，他甚至从头至尾都不曾说过一句话，让你除了他的肢体，再没有其他什么途径了解他的内心。沉默，往往就是这类游戏的基调，作者只给你一个大的环境与一些小的细节，剩下的全要由你想象，被引导的想象，发散的想象，满足的想象。&lt;/p&gt;

&lt;p&gt;然而“娱乐，不论多么有趣，总会有一天厌倦。”这就是粘附在游戏这个想要成为艺术的载体身上的最为严重的缺陷。为了获得内心的感动，你不得不操纵你的角色先杀个尸横遍野，有时候这并不是多么愉快的体验，从而容易让人心生厌倦。电影中永远作为第三者的我们的视角在这时就很有优势，我不用承受任何负担，我可以跳过我不想要的，直入主题，获得满足。&lt;/p&gt;

&lt;p&gt;游戏无法分离其表和里，为了得到一样就不能忽略另一样，两者的差异有时却又是如此得大以至于会让人有索性一并放弃的想法。这可能也就是为何游戏只是被戏称为第九艺术而从未真正被冠上艺术品之名的原因。&lt;/p&gt;
</description>
        <pubDate>Tue, 26 Mar 2013 23:30:00 +0800</pubDate>
        <link>http://kanedou.me/2013/03/bioshock-infinite-brought-along/</link>
        <guid isPermaLink="true">http://kanedou.me/2013/03/bioshock-infinite-brought-along/</guid>
      </item>
    
      <item>
        <title>电影日记 I</title>
        <description>&lt;h2&gt;Play It Again, Sam（呆头鹅）&lt;/h2&gt;

&lt;p&gt;中译呆头鹅人如其名，伍迪艾伦把一个又傻又聪明的家伙演得相当神经质（敏感、多虑）
、话唠又不缺不动声色的幽默（“我二十九了，性能力高峰在十年前就结束了”；“不是焦虑
不是惊恐是 homosexual panic”…），说来这也是他的招牌演技了，只不过近年来水准下降
得厉害。向北非谍影借角色来做旁白虽然没法引起我的共鸣（没看过。。。），但却能把
剧情顺当地推进下去同时也有点人格分裂的意味，同时借他人之口来讲述自己的想法，不
会造成矛盾。戴安基顿这部片里长得有点奇怪，但那种呆呆的音调很有意思，同时衣着永
远有品位。虽然没有什么亮点但一演起对手戏就有种相当默契的感觉，不算话唠，但也喜
欢平静地一鸣惊人。她老公比较正常，同时也比较搞，随时报上所在地电话号码印象深刻
。快结束时那一段段臆想的剧情亮点颇多。结局稍有点首尾呼应。&lt;/p&gt;

&lt;h2&gt;To Kill a Mocking Bird（杀死一只知更鸟）&lt;/h2&gt;

&lt;p&gt;女孩 Scout 叫自己爸爸 Atticus 是让我觉得最棒的细节，一下子把她的天真无拘束和他
的平静稳定显露无遗。节奏很好，把这个伸张正义的片子拍得有点惊悚、有点悬疑又有点
悲哀。但不管怎么绕，父亲的正直，女孩和男孩的活泼，以及最后出场的人物那种让人惊
喜的善良（就像一只知更鸟）都被恰当表现了出来，不会头重脚轻虎头蛇尾。人性是丑恶
与美好并存的，然而即使是恶也并非总是纯粹的恶，而是被大势裹挟了的无知的恶。当嫌
疑人被关到镇里，镇上的居民被煽动想绕过法律直接制裁他，但勇敢的 Scout 的一席话就
改变了他们的态度，救了父亲，同时展现人们的矛盾。庭审是遗憾的，向我们展现了无论
哪个年代的人们都绕不过的那种不公的鄙夷与憎恶，以及努力了、捍卫了但又失败了的无
力。法庭辩论中张弛有度，不言自明的魅力被 Atticus 表现得淋漓尽致。&lt;/p&gt;

&lt;h2&gt;I Confess（忏情记）&lt;/h2&gt;

&lt;p&gt;恪守原则还是爱？不论哪个都需要勇气支撑。当女主角把一切和盘托出的时候，这个故事
落幕了还是刚刚开始？都不是，只是告诉你你的坦白真诚一文不名。为何探寻真相的人反
而要利用真相来达到自己的目的？因为掺杂了真相的谎言最容易生效。当一系列的巧合都
被联系到作为被告人的男主角身上时，他的沉默只是作为巧合的对立面的必然。当编剧觉
得巧合足够多的时候就给了观众一个解脱，但不那么自然，虽然我认为男主角的自我牺牲
如果真的能打动人，也就只能打动她了吧，以正确的方式。这就牵扯到另一个问题，你的
沉默别人不知缘由，就像你做了艰苦工作但没有人能够看得到，那它是白费了还是总在那
里等待别人的发现？电影说是后者。&lt;/p&gt;
</description>
        <pubDate>Sat, 09 Mar 2013 22:13:00 +0800</pubDate>
        <link>http://kanedou.me/2013/03/motion-picture-diary-i/</link>
        <guid isPermaLink="true">http://kanedou.me/2013/03/motion-picture-diary-i/</guid>
      </item>
    
      <item>
        <title>You need sunshine boy</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://500px.com/photo/21445079&quot;&gt;
  &lt;img class=&quot;oob&quot; src=&quot;http://pcdn.500px.net/21445079/707294c5752a8f50b583d86f5732c2e4f39a04ab/4.jpg&quot; alt=&quot;Wind by Kane Dou (kols)) on 500px.com&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;you do need it (;&lt;/p&gt;
</description>
        <pubDate>Tue, 25 Dec 2012 21:49:00 +0800</pubDate>
        <link>http://kanedou.me/2012/12/you-need-sunshine-boy/</link>
        <guid isPermaLink="true">http://kanedou.me/2012/12/you-need-sunshine-boy/</guid>
      </item>
    
      <item>
        <title>使用 scrapy （Part I）</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://scrapy.org&quot;&gt;scrapy&lt;/a&gt; 是一个高级的网页内容抓取工具，主要用来自动化访问网
页并程序化提取其中对用户有用的内容。scrapy 构建于流行的 python 异步框架
&lt;a href=&quot;http://twistedmatrix.com&quot;&gt;twisted&lt;/a&gt; 之上，利用该框架的特点达到抓取的高效率，但
其面向用户的接口则是完全经过封装并与普通 python 代码写法并无二致的，因此不熟悉
twisted 的用户也不用担心。&lt;/p&gt;

&lt;!-- more --&gt;


&lt;h2&gt;安装&lt;/h2&gt;

&lt;p&gt;由于 scrapy 是一个 python package，所以先安装 virtualenv 及 pip：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo apt-get install virtualenv python-pip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;接着安装 scrapy：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;virtualenv --no-site-packages scrapy
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ./scrapy/bin/activate
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip install scrapy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;使用&lt;/h2&gt;

&lt;p&gt;scrapy 提供的各种工具能大量简化实际抓取时的代码量，同时其对抓取过程的抽象化也很
到位，方便用户对其控制的同时也提供了相当的自动化特性。&lt;/p&gt;

&lt;p&gt;这里就用罗森的官方网站（http://www.lawson.com.cn/shops）为例，说明一下如何使用
scrapy。示例的结果是得到一份罗森在上海的所有便利店的清单。&lt;/p&gt;

&lt;h3&gt;新建 Project&lt;/h3&gt;

&lt;p&gt;首先用 scrapy 新建一个 project：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;scrapy startproject lawson
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;熟悉一下目录结构：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text&quot;&gt;lawson
├── lawson
│   ├── __init__.py
│   ├── items.py
│   ├── pipelines.py
│   ├── settings.py
│   └── spiders
│       └── __init__.py
└── scrapy.cfg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;code&gt;items.py&lt;/code&gt; 定义抓取结果中单个项所需要包含的所有内容，比如便利店的地址、
分店名称等。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pipelines.py&lt;/code&gt; 定义如何对抓取到的内容进行再处理，例如输出文件、写入数据库等。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;settings.py&lt;/code&gt; 是 scrapy 的设置文件，可对其行为进行调整。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spiders&lt;/code&gt; 目录下存放写好的 spider，也即是实际抓取逻辑。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scrapy.cfg&lt;/code&gt; 是整个项目的设置，主要用于部署 scrapyd 服务，本文不会涉及。&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;第一个 spider&lt;/h3&gt;

&lt;p&gt;scrapy 中最为重要的部分就是
&lt;a href=&quot;http://doc.scrapy.org/en/0.14/topics/spiders.html&quot;&gt;spider&lt;/a&gt;。它包含了
分析网页与抓取网页数据的具体逻辑，也就是说对网页上任何内容的任何处理都在 spider
中实现。因此，这是 scrapy 整个框架的核心。&lt;/p&gt;

&lt;p&gt;首先定义
&lt;a href=&quot;http://doc.scrapy.org/en/0.14/topics/items.html#module-scrapy.item&quot;&gt;Item&lt;/a&gt;：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy.item&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ConvStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;branch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;city&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;district&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;longitude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;latitude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里定义了一个便利店（&lt;code&gt;ConvStore&lt;/code&gt;）所应包含的内容（
&lt;a href=&quot;http://doc.scrapy.org/en/0.14/topics/items.html#item-fields&quot;&gt;Field&lt;/a&gt; ），会在
spider 中用到，用来承载其抓取下来的实际数据。&lt;/p&gt;

&lt;p&gt;现在来看 spider：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy.contrib.linkextractors.sgml&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SgmlLinkExtractor&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy.contrib.spiders&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CrawlSpider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Rule&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy.selector&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HtmlXPathSelector&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;lawson.items&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ConvStore&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LawsonSpider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CrawlSpider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;lawson&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;start_urls&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;http://www.lawson.com.cn/shops&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;allowed_domains&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;lawson.com.cn&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rules&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Rule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SgmlLinkExtractor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;allow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;#39;list\?area_id=\d+&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;parse_store_list&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse_store_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;hxs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HtmlXPathSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;store_selectors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hxs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;//div[@class=&amp;quot;ShopList&amp;quot;]/table/tr&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;store_selectors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ConvStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u&amp;#39;罗森&amp;#39;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;alias&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u&amp;#39;Lawson&amp;#39;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;branch&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;th/p/text()&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;address&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;td/span/text()&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;district&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;link_text&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;city&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u&amp;#39;上海&amp;#39;&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load_item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;首先可以看到代码很短，整个 &lt;code&gt;LawsonSpider&lt;/code&gt; 类只有二十多行，但已经能够为我们抓
取所有必需的信息。&lt;/li&gt;
&lt;li&gt;scrapy 提供了一些基本类（Base class）让我们去继承，
&lt;a href=&quot;http://doc.scrapy.org/en/0.14/topics/spiders.html#crawlspider&quot;&gt;&lt;code&gt;CrawlSpider&lt;/code&gt;&lt;/a&gt;
就是其中之一。代码中所定义的类变量（Class variable）都是再 scrapy 中有各自作
用的。

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt; 是该 spider 的名字，scrapy 命令行工具调用 spider 时就用这个名字去找
到对应的 spider。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;start_urls&lt;/code&gt; 是 spider 的入口，即是告诉它该从哪个网页开始抓取。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;allowed_domains&lt;/code&gt; 限定 spider 的抓取活动只能在指定的 domain 中进行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rules&lt;/code&gt; 定义了一系列规则用来匹配网页中出现的内容，并根据规则分发至不同的处理
方法中。这里定义了一个规则是向网页中所有匹配正则表达式 &lt;code&gt;r'list\?area_id=\d+'&lt;/code&gt;
的链接（如果你在浏览器打开初始页面的话会发现这些就是页面下方以上海各个区命名
的那几个链接）发出请求并将其结果交给 &lt;code&gt;parse_store_list&lt;/code&gt; 方法（Method）来处理。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://doc.scrapy.org/en/0.14/topics/link-extractors.html#sgmllinkextractor&quot;&gt;&lt;code&gt;SgmlLinkExtractor&lt;/code&gt;&lt;/a&gt;
是 scrapy 提供的连接提取器，它的用途就是，呃，提取链接。

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;allow&lt;/code&gt; 参数是正则表达式，网页中匹配的链接会被抓取。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tags&lt;/code&gt; 指定从哪些标签抓取链接，默认 &lt;code&gt;['a', 'area']&lt;/code&gt;（通过分析网页
这里不能包含 &lt;code&gt;area&lt;/code&gt;，故手动指定。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parse_store_list&lt;/code&gt; 方法定义了如何抓取特定网页中的数据

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://doc.scrapy.org/en/0.14/topics/selectors.html#scrapy.selector.HtmlXPathSelector&quot;&gt;&lt;code&gt;HtmlXPathSelector&lt;/code&gt;&lt;/a&gt;
是一个选择器，使用它能方便地定位到网页中的某个位置并抓取其中内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;&lt;code&gt;CrawlSpider&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;这个类是整个抓取逻辑的基础，他的工作流程如下：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;若有 &lt;code&gt;start_urls&lt;/code&gt;，则从这些 URL 开始抓取，若没有，则执行 &lt;code&gt;start_requests&lt;/code&gt; 方
法（用户须定义），并请求该方法返回的 &lt;code&gt;Request&lt;/code&gt; 对象，并从这些请求结果中开始
抓取。&lt;/li&gt;
&lt;li&gt;所有网页请求返回的 &lt;code&gt;Response&lt;/code&gt; 默认交给 &lt;code&gt;parse&lt;/code&gt; 方法处理。

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;parse&lt;/code&gt; 方法在 &lt;code&gt;CrawlSpider&lt;/code&gt; 的默认实现是用已定义的 &lt;code&gt;rules&lt;/code&gt; 对获得的网页内
容进行匹配并进行由 &lt;code&gt;Rule&lt;/code&gt; 所指定的进一步处理（即交给 &lt;code&gt;callback&lt;/code&gt; 参数所指定
的 &lt;code&gt;callable&lt;/code&gt; 去处理）。&lt;/li&gt;
&lt;li&gt;若不指定 &lt;code&gt;callback&lt;/code&gt;, &lt;code&gt;Rule&lt;/code&gt; 的默认处理是对匹配的网址发起请求，并再次交给
&lt;code&gt;parse&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;任何方法中返回的 Item 实例（如示例中的 &lt;code&gt;ConvStore&lt;/code&gt;）都会被作为有效数据保存
（输出文件等），再处理（
&lt;a href=&quot;http://doc.scrapy.org/en/0.14/topics/item-pipeline.html&quot;&gt;Pipeline&lt;/a&gt;）。&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;&lt;code&gt;HtmlXPathSelector&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;这是一个通过 &lt;a href=&quot;http://www.w3schools.com/xpath/default.asp&quot;&gt;XPath&lt;/a&gt; 对 HTML 页面进
行结构化定位和内容读取的工具。scrapy 使用它定位到网页中用户所需要的数据并进行抓
取。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse_store_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;hxs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HtmlXPathSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;store_selectors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hxs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;//div[@class=&amp;quot;ShopList&amp;quot;]/table/tr&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;store_selectors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;branch&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;th/p/text()&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;address&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;td/span/text()&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;code&gt;HtmlXPathSelector&lt;/code&gt; 需要一个 Response 对象来实例化。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;//div[@class=&quot;ShopList&quot;]/table/tr&lt;/code&gt; 选择了所有包含罗森门店信息的 &lt;code&gt;tr&lt;/code&gt; 标签。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;s.select('th/p/text()').extract()&lt;/code&gt; 在之前的选择基础上继续对其子标签做选择，
这里就确实得选择到了分店名。&lt;code&gt;extract()&lt;/code&gt; 则将该标签的文本数据读取出来。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HtmlXPathSelector&lt;/code&gt; 还有正则表达式接口，后文会提到。&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Field, Item 及 Item Loader&lt;/h3&gt;

&lt;p&gt;Field 仅仅是一个 &lt;code&gt;dict&lt;/code&gt; 的 wrapper 类，因此使用方法与 &lt;code&gt;dict&lt;/code&gt; 完全一样，在
scrapy 中它负责声明单个 Item 的字段及该字段的各种行为（如序列化方法
&lt;code&gt;serializer&lt;/code&gt;）。&lt;/p&gt;

&lt;p&gt;Item 用 Field 定义了单个有效数据的具体字段，而实际中则是主要有两种方法写入
数据：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;使用其类似 &lt;code&gt;dict&lt;/code&gt; 的接口进行数据的写入和读取，&lt;code&gt;key&lt;/code&gt; 为字段名。&lt;/li&gt;
&lt;li&gt;使用 &lt;a href=&quot;http://doc.scrapy.org/en/0.14/topics/loaders.html&quot;&gt;Item Loader&lt;/a&gt;。&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;&lt;code&gt;dict&lt;/code&gt; 接口的用法如上所示很简单，这里说一下 Item Loader。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy.contrib.loader&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ItemLoader&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy.contrib.loader.processor&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Compose&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;lawson.items&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ConvStore&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StoreLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ItemLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;default_output_processor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Compose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;unicode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;branch_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u&amp;#39;店&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;店&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LawsonSpider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CrawlSpider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse_store_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;hxs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HtmlXPathSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;store_selectors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hxs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;//div[@class=&amp;quot;ShopList&amp;quot;]/table/tr&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;store_selectors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StoreLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConvStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u&amp;#39;罗森&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;alias&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u&amp;#39;Lawson&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;branch&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;th/p/text()&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;address&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;td/span/text()&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;district&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;link_text&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;city&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u&amp;#39;上海&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load_item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Item Loader 的主要作用是对抓取数据的各个字段进行特殊处理，在这里我们定义了一个
&lt;code&gt;StoreLoader&lt;/code&gt; 类继承（Inherit）自 &lt;code&gt;ItemLoader&lt;/code&gt;：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;default_output_processor&lt;/code&gt; 定义默认的输出处理器，这里我们对抓取的数据值进行
strip 操作。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;branch_in&lt;/code&gt; 方法是对 &lt;code&gt;branch&lt;/code&gt; 字段的特殊处理，他发生在输入的时候，也就是刚抓
取到数据之后。这里的处理是为没有&lt;code&gt;店&lt;/code&gt;这个字的分店名补上这个字。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;field&amp;gt;_in&lt;/code&gt; 和 &lt;code&gt;&amp;lt;field&amp;gt;_out&lt;/code&gt; 会各对指定字段做一次处理，前者是在刚抓取到数据
时，后者是在最终输出之前，用户根据需要定义相应方法。

&lt;ul&gt;
&lt;li&gt;scrapy 有一些 &lt;a href=&quot;http://doc.scrapy.org/en/0.14/topics/loaders.html#module-scrapy.contrib.loader.processor&quot;&gt;built-in processor&lt;/a&gt;
可以直接使用，进行一些通用处理。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;add_value&lt;/code&gt; 将值赋予相应字段，很好理解。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;load_item&lt;/code&gt; 返回该条填充过数据的 Item。&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;使用 Item Loader 的好处显而易见，我们有一个统一的地方对所有数据字段进行处理，不
用将其混入抓取逻辑，使整个流程分工明确。&lt;/p&gt;

&lt;p&gt;另一个常用的 Item Loader 是 &lt;code&gt;XPathItemLoader&lt;/code&gt;，显然这个版本利用了 XPath：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;store&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;XPathItemLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConvStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;branch&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;//div[@class=&amp;quot;ShopList&amp;quot;]/table/tr[2]/th/p/text()&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;它将字段与 XPath 表达式关联起来，直接完成定位、读取和写入数据的操作，很方便。&lt;/p&gt;

&lt;h3&gt;加上经纬度&lt;/h3&gt;

&lt;p&gt;经纬度对于定位一个地点是很有用的，通过电子地图能够精确地定位至相关地点。我发现
罗森网站提供了这个信息，但它并未明文显示，而是需要通过其所链接到的百度地图的页
面中去抓取下来，听起来很麻烦，但实际却很简单。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urlparse&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urljoin&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy.contrib.loader&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;XPathItemLoader&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy.http&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy.selector&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HtmlXPathSelector&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy.utils.response&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_base_url&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;poi_scrape.items&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ConvStore&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StoreLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;XPathItemLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LawsonSpider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BasePoiSpider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse_geo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;hxs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HtmlXPathSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;store&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;lng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hxs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;#39;(\d+\.\d+),(\d+\.\d+)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;latitude&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load_item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse_store_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;store_selectors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StoreLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConvStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;map_rel_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;td/a/@rel&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map_rel_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;map_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urljoin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_base_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map_rel_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_geo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;store&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load_item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里为 &lt;code&gt;LawsonSpider&lt;/code&gt; 新增了一个方法 &lt;code&gt;parse_geo&lt;/code&gt;，同时改写了
&lt;code&gt;parse_store_list&lt;/code&gt;。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;在 &lt;code&gt;parse_store_list&lt;/code&gt; 的循环中我抓取每个店的 &lt;code&gt;tr&lt;/code&gt; 标签中的 &lt;code&gt;td/a/@rel&lt;/code&gt; 属性
（Attribute）（这里 &lt;code&gt;@rel&lt;/code&gt; 表示 &lt;code&gt;a&lt;/code&gt; 标签的 &lt;code&gt;rel&lt;/code&gt; 属性），若有这一属性则对这个
地图的链接发起请求，即 &lt;code&gt;yield req&lt;/code&gt;。

&lt;ul&gt;
&lt;li&gt;在 scrapy 中，spider 类中的方法若返回 Request 实例则 scrapy 会自动对该
Request 包含的 URL 发出请求，并将其返回的结果封装为 Response 后交给
&lt;code&gt;callback&lt;/code&gt; 参数中指定的方法处理，若未指定 &lt;code&gt;callback&lt;/code&gt;，则交给 &lt;code&gt;parse&lt;/code&gt; 方法处
理。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;req.meta['store'] = store&lt;/code&gt;，每个 Request 有一个预定义的 &lt;code&gt;meta&lt;/code&gt; 属性（&lt;code&gt;dict&lt;/code&gt;
），保存在其中的值在其对应的 Response 中可以再次取出：
&lt;code&gt;store = response.meta['store']&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hxs.re(r'(\d+\.\d+),(\d+\.\d+)')&lt;/code&gt; 使用了 &lt;code&gt;HtmlXPathSelector&lt;/code&gt; 的正则表达式接
口直接从网页中通过正则表达式匹配抓取数据。&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;完整 spider 代码&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;items.py&lt;/code&gt; 没有改动，与上文中的一致。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# vim: fileencoding=utf-8&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urlparse&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urljoin&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy.contrib.linkextractors.sgml&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SgmlLinkExtractor&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy.contrib.loader&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;XPathItemLoader&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy.contrib.loader.processor&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Compose&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy.contrib.spiders&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CrawlSpider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Rule&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy.http&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy.selector&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HtmlXPathSelector&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy.utils.response&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_base_url&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;lawson.items&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ConvStore&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StoreLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;XPathItemLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;default_output_processor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Compose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;unicode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;branch_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u&amp;#39;店&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;店&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LawsonSpider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CrawlSpider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;lawson&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;start_urls&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;http://www.lawson.com.cn/shops&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;allowed_domains&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;lawson.com.cn&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rules&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Rule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SgmlLinkExtractor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;allow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;#39;list\?area_id=\d+&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;parse_store_list&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse_geo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;hxs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HtmlXPathSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;store&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;lng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hxs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;#39;(\d+\.\d+),(\d+\.\d+)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;latitude&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load_item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse_store_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;hxs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HtmlXPathSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;store_selectors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hxs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;//div[@class=&amp;quot;ShopList&amp;quot;]/table/tr&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;store_selectors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StoreLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConvStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u&amp;#39;罗森&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;alias&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u&amp;#39;Lawson&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;branch&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;th/p/text()&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;address&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;td/span/text()&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;district&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;link_text&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;city&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u&amp;#39;上海&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;map_rel_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;td/a/@rel&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map_rel_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;map_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urljoin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_base_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map_rel_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_geo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;store&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load_item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;scrapy 命令行工具&lt;/h3&gt;

&lt;p&gt;scrapy 提供了一些命令行工具
（&lt;a href=&quot;http://doc.scrapy.org/en/0.14/topics/commands.html&quot;&gt;Command line tool&lt;/a&gt;），之
前创建 Project 的时候用到的 &lt;code&gt;startproject&lt;/code&gt; 就是其中之一。而除了这个之外，其他工
具也各自提供了相当有用的功能。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text&quot;&gt;$ scrapy
Scrapy 0.14.4 - project: lawson

Usage:
  scrapy &amp;lt;command&amp;gt; [options] [args]

Available commands:
  crawl         Start crawling from a spider or URL
  deploy        Deploy project in Scrapyd target
  edit          Edit spider
  fetch         Fetch a URL using the Scrapy downloader
  genspider     Generate new spider using pre-defined templates
  list          List available spiders
  parse         Parse URL (using its spider) and print the results
  runspider     Run a self-contained spider (without creating a project)
  server        Start Scrapyd server for this project
  settings      Get settings values
  shell         Interactive scraping console
  startproject  Create new project
  version       Print Scrapy version
  view          Open URL in browser, as seen by Scrapy

Use &amp;quot;scrapy &amp;lt;command&amp;gt; -h&amp;quot; to see more info about a command
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里仅挑出部分来讲。&lt;/p&gt;

&lt;h4&gt;&lt;code&gt;shell&lt;/code&gt;&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;scrapy shell &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://www.lawson.com.cn/shops&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;运行后会进入 Python Interpreter，在这里我们能进行各种试验，配合
&lt;a href=&quot;http://doc.scrapy.org/en/0.14/topics/firebug.html&quot;&gt;Firebug&lt;/a&gt; 之类的工具，为程序
构建一个原型：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;抓取各区分店列表链接，同时演示 &lt;code&gt;SgmlLInkExtractor&lt;/code&gt; 用法：&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy.contrib.linkextractors.sgml&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SgmlLinkExtractor&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SgmlLinkExtractor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;allow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;#39;list\?area_id=\d+&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract_links&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;http://www.lawson.com.cn/shops/list?area_id=1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u957f\u5b81\u533a&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fragment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nofollow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;http://www.lawson.com.cn/shops/list?area_id=2&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u5f90\u6c47\u533a&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fragment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nofollow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;http://www.lawson.com.cn/shops/list?area_id=3&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u9759\u5b89\u533a&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fragment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nofollow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;抓取分店列表，&lt;code&gt;fetch&lt;/code&gt; 用来载入新的 URL：&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;http://www.lawson.com.cn/shops/list?area_id=1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hxs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;//div[@class=&amp;quot;ShopList&amp;quot;]/table/tr&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HtmlXPathSelector&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;//div[@class=&amp;quot;ShopList&amp;quot;]/table/tr&amp;#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;&amp;lt;tr&amp;gt;&amp;lt;th scope=&amp;quot;row&amp;quot; class=&amp;quot;linetop&amp;quot;&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\t\t\t&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HtmlXPathSelector&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;//div[@class=&amp;quot;ShopList&amp;quot;]/table/tr&amp;#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;&amp;lt;tr&amp;gt;&amp;lt;th scope=&amp;quot;row&amp;quot; class=&amp;quot;linetop&amp;quot;&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\t\t\t&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HtmlXPathSelector&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;//div[@class=&amp;quot;ShopList&amp;quot;]/table/tr&amp;#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;&amp;lt;tr&amp;gt;&amp;lt;th scope=&amp;quot;row&amp;quot; class=&amp;quot;linetop&amp;quot;&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\t\t\t&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;抓取分店名称，演示 &lt;code&gt;HtmlXPathSelector&lt;/code&gt; 用法：&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hxs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;//div[@class=&amp;quot;ShopList&amp;quot;]/table/tr&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;th/p/text()&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\t\t\t\t\u53e4\u5317\u65b0\u533a\n\t\t\t\t&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;th/p/text()&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u&amp;#39;店&amp;#39;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;古北新区店&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这是一个相当完善的命令行界面，提供了所有必需的网页分析及抓取工具，十分适合在实
际写抓取程序前做实验。&lt;/p&gt;

&lt;p&gt;而 &lt;code&gt;shell&lt;/code&gt; 不仅能从命令行直接调用，还能从程序中调用直接进入以便分析程序做调试：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy.shell&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inspect_response&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LawsonSpider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BasePoiSpider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse_geo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;inspect_response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse_store_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样在执行到 &lt;code&gt;parse_geo&lt;/code&gt; 时就会掉入 &lt;code&gt;shell&lt;/code&gt; 界面，可以做进一步调试。&lt;/p&gt;

&lt;h4&gt;&lt;code&gt;crawl&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;真正的抓取就是通过这个命令执行的：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;scrapy crawl lawson
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;




&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text&quot;&gt;2012-07-18 15:14:58+0800 [scrapy] INFO: Scrapy 0.14.4 started (bot: lawson)
2012-07-18 15:14:58+0800 [scrapy] DEBUG: Enabled extensions: FeedExporter, LogStats, TelnetConsole, CloseSpider, WebService, CoreStats, SpiderState
2012-07-18 15:14:58+0800 [scrapy] DEBUG: Enabled downloader middlewares: HttpAuthMiddleware, DownloadTimeoutMiddleware, UserAgentMiddleware, RetryMiddleware, DefaultHeadersMiddleware, RedirectMiddleware, CookiesMiddleware, HttpCompressionMiddleware, ChunkedTransferMiddleware, DownloaderStats
2012-07-18 15:14:58+0800 [scrapy] DEBUG: Enabled spider middlewares: HttpErrorMiddleware, OffsiteMiddleware, RefererMiddleware, UrlLengthMiddleware, DepthMiddleware
2012-07-18 15:14:58+0800 [scrapy] DEBUG: Enabled item pipelines:
2012-07-18 15:14:58+0800 [lawson] INFO: Spider opened
2012-07-18 15:14:58+0800 [lawson] INFO: Crawled 0 pages (at 0 pages/min), scraped 0 items (at 0 items/min)
2012-07-18 15:14:58+0800 [scrapy] DEBUG: Telnet console listening on 0.0.0.0:6023
2012-07-18 15:14:58+0800 [scrapy] DEBUG: Web service listening on 0.0.0.0:6080
2012-07-18 15:14:59+0800 [lawson] DEBUG: Crawled (200) &amp;lt;GET http://www.lawson.com.cn/shops&amp;gt; (referer: None)
2012-07-18 15:14:59+0800 [lawson] DEBUG: Crawled (200) &amp;lt;GET http://www.lawson.com.cn/shops/list?area_id=16&amp;gt; (referer: http://www.lawson.com.cn/shops)
2012-07-18 15:14:59+0800 [lawson] DEBUG: Scraped from &amp;lt;200 http://www.lawson.com.cn/shops/list?area_id=16&amp;gt;
    {&amp;#39;address&amp;#39;: u&amp;#39;\u5609\u5b9a\u533a\u5609\u677e\u516c\u8def6128\u53f7&amp;#39;,
     &amp;#39;alias&amp;#39;: u&amp;#39;Lawson&amp;#39;,
     &amp;#39;branch&amp;#39;: u&amp;#39;\u540c\u6d4e\u5927\u5b66\u5e97&amp;#39;,
     &amp;#39;city&amp;#39;: u&amp;#39;\u4e0a\u6d77&amp;#39;,
     &amp;#39;district&amp;#39;: u&amp;#39;\u5609\u5b9a\u533a&amp;#39;,
     &amp;#39;name&amp;#39;: u&amp;#39;\u7f57\u68ee&amp;#39;}
...
2012-07-18 15:15:01+0800 [lawson] DEBUG: Crawled (200) &amp;lt;GET http://www.lawson.com.cn/shops/199/map&amp;gt; (referer: http://www.lawson.com.cn/shops/list?area_id=12)
2012-07-18 15:15:01+0800 [lawson] DEBUG: Scraped from &amp;lt;200 http://www.lawson.com.cn/shops/199/map&amp;gt;
    {&amp;#39;address&amp;#39;: u&amp;#39;\u677e\u6c5f\u533a\u897f\u6797\u5317\u8def1048\u53f7&amp;#39;,
     &amp;#39;alias&amp;#39;: u&amp;#39;Lawson&amp;#39;,
     &amp;#39;branch&amp;#39;: u&amp;#39;\u677e\u6c5f\u5987\u5e7c\u4fdd\u5065\u9662\u5e97&amp;#39;,
     &amp;#39;city&amp;#39;: u&amp;#39;\u4e0a\u6d77&amp;#39;,
     &amp;#39;district&amp;#39;: u&amp;#39;\u677e\u6c5f\u533a&amp;#39;,
     &amp;#39;latitude&amp;#39;: u&amp;#39;31.030622&amp;#39;,
     &amp;#39;longitude&amp;#39;: u&amp;#39;121.225586&amp;#39;,
     &amp;#39;name&amp;#39;: u&amp;#39;\u7f57\u68ee&amp;#39;}
...
2012-07-18 15:15:21+0800 [lawson] INFO: Closing spider (finished)
2012-07-18 15:15:21+0800 [lawson] INFO: Stored csv feed (320 items) in: lawson_store.csv
2012-07-18 15:15:21+0800 [lawson] INFO: Dumping spider stats:
    {&amp;#39;downloader/request_bytes&amp;#39;: 158946,
     &amp;#39;downloader/request_count&amp;#39;: 309,
     &amp;#39;downloader/request_method_count/GET&amp;#39;: 309,
     &amp;#39;downloader/response_bytes&amp;#39;: 1883104,
     &amp;#39;downloader/response_count&amp;#39;: 309,
     &amp;#39;downloader/response_status_count/200&amp;#39;: 309,
     &amp;#39;finish_reason&amp;#39;: &amp;#39;finished&amp;#39;,
     &amp;#39;finish_time&amp;#39;: datetime.datetime(2012, 7, 18, 7, 15, 21, 905140),
     &amp;#39;item_scraped_count&amp;#39;: 320,
     &amp;#39;request_depth_max&amp;#39;: 2,
     &amp;#39;scheduler/memory_enqueued&amp;#39;: 309,
     &amp;#39;start_time&amp;#39;: datetime.datetime(2012, 7, 18, 7, 14, 58, 538838)}
2012-07-18 15:15:21+0800 [lawson] INFO: Spider closed (finished)
2012-07-18 15:15:21+0800 [scrapy] INFO: Dumping global stats:
    {}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;从最后的报告中可以看到这个 spider 在一分钟内抓取了该网站全部320条数据
（&lt;code&gt;item_scraped_count&lt;/code&gt;）。&lt;/p&gt;

&lt;p&gt;若要输出抓取结果到一个文件，则加上参数：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sh&quot;&gt;scrapy crawl lawson -o store.csv -t csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样，这篇 scrapy 使用教程的第一部分就结束了。&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Jul 2012 14:41:00 +0800</pubDate>
        <link>http://kanedou.me/2012/07/introducing-python-scrapy-part-i/</link>
        <guid isPermaLink="true">http://kanedou.me/2012/07/introducing-python-scrapy-part-i/</guid>
      </item>
    
      <item>
        <title>没有时间胶囊的时间机器</title>
        <description>&lt;p&gt;Mac 有一个功能叫时间机器（Time
Machine），它能备份你硬盘上的所有数据到另一个硬盘或者是一个叫
&lt;a href=&quot;http://www.apple.com/timecapsule/&quot;&gt;时间胶囊（Time Capsule）&lt;/a&gt; 的东西上。&lt;/p&gt;

&lt;p&gt;时间胶囊很好，但是非常非常贵。而另一个办法则需要在 USB 上一直挂一个硬盘，这很麻
烦。两个办法都不能让我满意，而备份却是必不可少的。&lt;/p&gt;

&lt;p&gt;于是我找到了 &lt;a href=&quot;http://netatalk.sourceforge.net/&quot;&gt;netatalk&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;这是一个跑在 *NIX 机器上的开源 &lt;abbr title=&quot;AppleShare File Server&quot;&gt;AFP&lt;/abbr&gt;
服务器，它能像 Samba 之于 Windows 一样分享服务器上的文件，也可以将服务器上的一
个硬盘作为网络硬盘，发挥与时间胶囊相同的作用。要求则是一台 Linux/BSD 服务器。这
里我以 &lt;a href=&quot;http://www.debian.org&quot;&gt;Debian&lt;/a&gt; 为例说下用法。&lt;/p&gt;

&lt;!-- more --&gt;


&lt;h2&gt;安装&lt;/h2&gt;

&lt;h3&gt;准备源&lt;/h3&gt;

&lt;p&gt;要支持 OS X 10.7 Lion 就必须安装 2.2 以上的版本，在 Debian 中这个版本在
&lt;code&gt;wheezy&lt;/code&gt; 的源中，若未启用 &lt;code&gt;wheezy&lt;/code&gt; 则将下面两行加入 &lt;code&gt;/etc/apt/sources.list&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text&quot;&gt;deb http://mirrors.163.com/debian/ wheezy main contrib non-free
deb-src http://mirrors.163.com/debian/ wheezy main contrib non-free
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;netatalk&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;apt-get update
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;apt-get install -t wheezy netatalk/wheezy libgcrypt11/wheezy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;装 &lt;code&gt;wheezy&lt;/code&gt; 中的 &lt;code&gt;libgcrypt11&lt;/code&gt; 是因为 &lt;code&gt;netatalk&lt;/code&gt; 打包的一个 bug——它默认依赖的
这个库的版本不对，会导致 &lt;code&gt;netatalk&lt;/code&gt; crash。Miserable, I know。该 bug
&lt;a href=&quot;http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=568601#30&quot;&gt;已提交&lt;/a&gt;。&lt;/p&gt;

&lt;h3&gt;avahi&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;avahi&lt;/code&gt; 实现了 Apple 的 &lt;code&gt;Bonjour&lt;/code&gt; 协议，可以让你的服务器直接出现在 Finder 侧边
栏，并可以让 Time Machine 自动找到对应的网络硬盘，省去每次备份前的手动挂载。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;apt-get install avahi-daemon
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;配置&lt;/h2&gt;

&lt;h3&gt;netatalk&lt;/h3&gt;

&lt;p&gt;在 &lt;code&gt;/etc/netatalk/AppleVolumes.default&lt;/code&gt; 末尾加上&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text&quot;&gt;&amp;lt;path/to/backup/directory&amp;gt; &amp;quot;TimeMachine on $h&amp;quot; allow:&amp;lt;username&amp;gt; cnidscheme:dbd options:upriv,usedots,tm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;avahi&lt;/h3&gt;

&lt;p&gt;新建 &lt;code&gt;/etc/avahi/services/afpd.service&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; standalone=&amp;#39;no&amp;#39;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!--*-nxml-*--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE service-group SYSTEM &amp;quot;avahi-service.dtd&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;service-group&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;replace-wildcards=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;%h&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;service&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;_afpovertcp._tcp&lt;span class=&quot;nt&quot;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;port&amp;gt;&lt;/span&gt;548&lt;span class=&quot;nt&quot;&gt;&amp;lt;/port&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/service&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;service&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;_device-info._tcp&lt;span class=&quot;nt&quot;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;port&amp;gt;&lt;/span&gt;0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/port&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;txt-record&amp;gt;&lt;/span&gt;model=Xserve&lt;span class=&quot;nt&quot;&gt;&amp;lt;/txt-record&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/service&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/service-group&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Time Machine&lt;/h3&gt;

&lt;p&gt;Time Machine 默认不会显示 AFP 服务器上的网络硬盘，（在 Mac 上）改个参数让它显示
出来&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;defaults write com.apple.systempreferences TMShowUnsupportedNetworkVolumes 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;启动&lt;/h2&gt;

&lt;p&gt;重启 &lt;code&gt;netatalk&lt;/code&gt; 和 &lt;code&gt;avahi&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;service netatalk restart
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;service avahi-daemon restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这时候 Finder 中应该会出现服务器的图标，点击挂载（第一次需要，之后只要 &lt;code&gt;avahi&lt;/code&gt;
开着 Time Machine 自己会找到）&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;plain&quot; src=&quot;http://pic.yupoo.com/kols_v/C4pgfYwD/14hgGk.png&quot;
alt=&quot;Finder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;打开 Time Machine，看到配置好的硬盘，选择即可&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;plain&quot; src=&quot;http://pic.yupoo.com/kols_v/C4pgfQEP/15D4b1.png&quot; alt=&quot;Time Machine&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 26 Jun 2012 22:46:00 +0800</pubDate>
        <link>http://kanedou.me/2012/06/time-machine-with-netatalk/</link>
        <guid isPermaLink="true">http://kanedou.me/2012/06/time-machine-with-netatalk/</guid>
      </item>
    
      <item>
        <title>WordPress on dotCloud</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://dotcloud.com&quot;&gt;dotCloud&lt;/a&gt; 是一个平台，或者是一个有人代为管理的服务器。它的主要用途是让人们免费的发布自己的
Web 应用，并且在其之上省去了管理服务器的工作，也就省去了相当的繁琐，使得发布应用更快速方便，并且使得 Developer
专注于应用，而不用为发布操太多心。想想那些名字，apache、nginx、php-fpm、uwsgi、SSL
等等等等，各种各样的各不相同的设置与调试只会让人觉得麻烦、不轻松，虽然这其中也有知识。 然而 dotCloud 的应用发布则相当简单：
（dotcloud 的 python
客户端安装及命令行基本使用方法请参考&lt;a href=&quot;https://docs.dotcloud.com/&quot;&gt;官方文档&lt;/a&gt;，很简单。）&lt;/p&gt;

&lt;!-- more --&gt;


&lt;ol&gt;
&lt;li&gt;&lt;p&gt;新建 namespace。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ dotcloud create kdblue
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;建立 Build File。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dotcloud.yml:

www:
  approot: blog
  type: php
  instances: 3
db:
  type: mysql
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;www&lt;/code&gt; 与 &lt;code&gt;db&lt;/code&gt; 为 service 名称。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;approot&lt;/code&gt; 指定该 service 所在的本地根目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type&lt;/code&gt; 指定应用类型（语言、服务器）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;instances&lt;/code&gt; 设置进程数，若是 php 应用则会启动相应数量的 php-fpm 进程。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将设置推送至服务器。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ dotcloud push kdblue .
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;这样，一个名为 Build File 的 &lt;code&gt;dotcloud.yml&lt;/code&gt; 文件就完成了所有服务器端的设置，简单并且轻量。 接下来的工作就是
WordPress
的自身设置，根据&lt;a href=&quot;http://codex.wordpress.org/Installing_WordPress#Famous_5-Minute_Install&quot;&gt;著名的5分钟安装&lt;/a&gt;教程教我们的：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;搞到 WordPress。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在服务器上搞定数据库设置。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先获取 mysql 数据库密码及地址。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ dotcloud info kdblue.db
build_revision: rsync-1309344965.25
cluster: wolverine
config:
    hostname: kdblue-default-blog-db-0
    mysql_password: tpKsNbSjxXlb7I8DM3RH
created_at: 1309267100.7312429
ports:
-   name: ssh
    url: tcp://53e93k2c.dotcloud.com:9219
-   name: mysql
    url: tcp://53e93k2c.dotcloud.com:9220
state: running
type: mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;登录并创建 WordPress 用数据库。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ dotcloud run kdblue.db -- mysql -u root -ptpKsNbSjxXlb7I8DM3RH
(Below in mysql shell)
&amp;gt; create user 'dql' identified by 'password';
&amp;gt; create database wordpress;
&amp;gt; grant all on wordpress.* to 'dql'@'%'
  identified by 'password';
&amp;gt; flush privileges;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重命名 &lt;code&gt;wp-config-sample.php&lt;/code&gt; 为 &lt;code&gt;wp-config.php&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修改 &lt;code&gt;wp-config.php&lt;/code&gt; 中的数据库设置。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;define('DB_NAME', 'blog');
define('DB_USER', 'dql');
define('DB_PASSWORD', 'password');
define('DB_HOST', '53e93k2c.dotcloud.com:9220');
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;确认一下文件树结构。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  myapp/
  |- dotcloud.yml
  |_ blog/
     |_ wordpress/
         |_ wp-config.php
         |_ wp-contents/
         |_ ...
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将设置完毕的 WordPress 推送至服务器并重启进程。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ dotcloud push kdblue .
$ dotcloud restart kdblue.www
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;至此 WordPress 便部署成功，访问
&lt;code&gt;http://53e93k2c.dotcloud.com/wordpress/wp-admin/install&lt;/code&gt; 即可完成安装。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;有域名的可以设置自定义域名，并按说明更改相应 DNS 设置。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ dotcloud alias add kdblue.www www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;之后是一些有用的 Tip。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;因为每次 &lt;code&gt;push&lt;/code&gt; 都会将服务器端的更改删除（例如安装插件），因此可以使用一个 Post-Install Hook 来避免。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/sh
if [ -d ~/data/wp-content ]
then
      rm -rf ~/current/wordpress/wp-content
else
      mkdir -p ~/data
      mv ~/current/wordpress/wp-content ~/data/wp-content
fi
ln -s ~/data/wp-content ~/current/wordpress/wp-content
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将此文件命名为 &lt;code&gt;postinstall&lt;/code&gt; 加上执行权限后放在 &lt;code&gt;approot&lt;/code&gt; 目录下，这样每次 &lt;code&gt;push&lt;/code&gt;
后之前网页端所做的更改都会保留。（但升级 WordPress 本体似乎必须在本地执行后推送）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;若要直接在域名处（&lt;code&gt;www.example.com&lt;/code&gt;）而非子目录处（&lt;code&gt;www.example.com/wordpress&lt;/code&gt;）显示
WordPress，则需要自定义一项 nginx 设置。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;try_files $uri $uri/ /index.php;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;保存为 &lt;code&gt;nginx.conf&lt;/code&gt; 后放在 &lt;code&gt;approot&lt;/code&gt; 目录中。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.wwwizer.com/&quot;&gt;wwwizer&lt;/a&gt; 可以免费将 dotcloud 不支持的 naked domain
301重定向到前缀 www 的子域名，免费且不用注册，直接 A 记录指向其提供的 IP 即可。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 01 Jul 2011 00:00:00 +0800</pubDate>
        <link>http://kanedou.me/2011/07/wordpress-dotcloud/</link>
        <guid isPermaLink="true">http://kanedou.me/2011/07/wordpress-dotcloud/</guid>
      </item>
    
      <item>
        <title>用 Python 建英语单词表</title>
        <description>&lt;p&gt;今天受到 dofine
同学&lt;a href=&quot;http://blog.dofine.info/2010/10/use-org-mode-to-recite-words.html&quot;&gt;这篇文章&lt;/a&gt;
的启发，想到也可以用相同的办法（Org-Mode 的 Checkbox）来背平时用
&lt;a href=&quot;http://stardict.sourceforge.net/&quot;&gt;Stardict&lt;/a&gt; 记下的陌生单词，于是写了一个
&lt;a href=&quot;http://python.org&quot;&gt;Python&lt;/a&gt; 脚本来将单词整理起来，过程中使用了 Dict.CN 的
&lt;a href=&quot;http://dict.cn/ws.php?q=word&quot;&gt;API接口&lt;/a&gt; 获取单词的音标，释义以及例句。效果看图：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pic.yupoo.com/kols/AAxA5L5B/11io9J.png&quot; title=&quot;owlb1&quot;&gt;&lt;img src=&quot;http://pic.yupoo.com/kols/AAxA5L5B/medium.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;输入源：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;delineate
parity
heterogeneous
deterministic
heterogeneous,
Intersect
impede
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;脚本文件这里找：&lt;a href=&quot;http://github.com/kols/util_scripts/blob/master/owlb.py&quot;&gt;owlb.py&lt;/a&gt;
，用法为输入一个纯文本单词文件（格式如上：一个单词一行），输出相应 &lt;code&gt;.org&lt;/code&gt; 文件，
具体请看 &lt;code&gt;python owlb.py --help&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;2010/11/05 Updated：&lt;/em&gt;现在脚本可以在原有单词列表上附加新单词，不会重复，只要将原列表作为输出文件即可。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;2011/03/17 Updated：&lt;/em&gt;重写后，现在的运行速度提高至原版的十倍。&lt;/p&gt;
</description>
        <pubDate>Sun, 31 Oct 2010 00:00:00 +0800</pubDate>
        <link>http://kanedou.me/2010/10/build-word-list-using-python/</link>
        <guid isPermaLink="true">http://kanedou.me/2010/10/build-word-list-using-python/</guid>
      </item>
    
      <item>
        <title>如何用 Org-Mode 做笔记</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://orgmode.org/&quot;&gt;&lt;em&gt;Org-Mode&lt;/em&gt;&lt;/a&gt; 是
&lt;a href=&quot;http://www.gnu.org/software/emacs/&quot;&gt;&lt;em&gt;Emacs&lt;/em&gt;&lt;/a&gt; 中的一个 Major Mode
，主要用于做笔记，管理待办事项（TODO list）以及做项目计划（摘自其《用户手册（The Org
Manual）》）。当然，这是笼统的描述，就像说 &lt;em&gt;Emacs&lt;/em&gt;
只是一个编辑器一般有种别样的幽默，但是今天我正是以其基本的笔记功能作为主题来简略地介绍一下这个有用并且好用的工具。
 整篇文章只叙述 &lt;em&gt;Org-Mode&lt;/em&gt; 的使用方法及最终效果，不会对各种设置做介绍也不会涉及 &lt;em&gt;Emacs&lt;/em&gt;
的使用，因此，这是一篇给所有人看的文章。&lt;/p&gt;

&lt;h3&gt;概览&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://pic.yupoo.com/kols/AzqxXL3X/IAYB1.png&quot; title=&quot;orgmode1&quot;&gt;&lt;img src=&quot;http://pic.yupoo.com/kols/AzqxXL3X/medium.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这张图是我最近正在学习的 &lt;a href=&quot;http://www.python.org&quot;&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt;
的笔记的截图，整个笔记结构很清晰，最上层的蓝色大字是标题，而后渐次缩小并改变颜色的以 &lt;code&gt;*&lt;/code&gt;
为首的条目均是按层级内嵌的各种小标题，其中缩进最远的则是标题中的具体内容。可以看到，以颜色以及字体大小来凸显笔记的层级区分相当的醒目，并且每一层次的内容均可收起以节省显示空间来专注于当前需要记录或查看的条目，这样的排版使得笔记的可看性也提高许多，而条目尾部的冒号部分则是该条目的标签（Tag），在搜索笔记时这是一个重要的筛选标准，可以快速定位至相关条目。值得注意的是，那些被
&lt;code&gt;=&lt;/code&gt; 包裹的文字在之后导出（Export）为 HTML 或 PDF 格式后会带有相应格式。另外其中 &lt;code&gt;#+BEGIN_SRC python&lt;/code&gt;
至 &lt;code&gt;#+END_SRC&lt;/code&gt; 之间的程序源代码在输出时亦会高亮显示语法。而最下面的 Footnotes
则是脚注，这张图片未显示其效果，具体则是与一般看书时遇到的脚注差不多。
 这是对 &lt;em&gt;Org-Mode&lt;/em&gt;
最初的概览，之后的部分则会从笔记的两个重要方面着手，查看其真正的实用性，并简单介绍除记录外其另一个有用的功能，最终你能看到的是一篇完全用
&lt;em&gt;Org-Mode&lt;/em&gt; 记录下的笔记。
 而第一步则是我们该如何以最高的效率及最小的麻烦写下一条笔记。&lt;/p&gt;

&lt;!-- more --&gt;


&lt;h3&gt;捕捉（Capture）&lt;/h3&gt;

&lt;p&gt;电脑中笔记的记录，首要的便是方便、快捷，也就是在想写的时候就能马上写，并且不用担心任何例如归类，存档之类的琐碎问题。就像随身的纸笔，拿来即写，写完即成，没有多余的动作。
 这里我们要说的就是 &lt;em&gt;Org-Mode&lt;/em&gt; 的 org-capture 功能，它的功能就是“捕捉”，而捕捉所需的就是快速、准确、不冗杂。
org-capture 的操作流程如下：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pic.yupoo.com/kols/AzfMqdMs/mNCTL.png&quot; title=&quot;orgcap1&quot;&gt;&lt;img src=&quot;http://pic.yupoo.com/kols/AzfMqdMs/medium.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这张图是命令调出 org-capture 后的第一个介面，
我需要做的是在画面下方这些我已预设好的模板（Template）之中选择一个来进行记录。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pic.yupoo.com/kols/AzfKpnsr/Q062A.png&quot; title=&quot;orgcap2&quot;&gt;&lt;img src=&quot;http://pic.yupoo.com/kols/AzfKpnsr/medium.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;选择 pick 模板后便转入这个介面，可以看到，现在按照模板的要求我必须在窗口最底部的 Mini buffer
中输入这条笔记的主题（Subject），也就是标题，输入完标题后还会需要输入标签，之后光标则会跳至图中 &lt;code&gt;%?&lt;/code&gt;
处来完成最后的笔记正文的输入。另外可以看到的是图中除了我上述所说的三个手动输入部分以外，其他内容均是模板预设的内容，例如笔记创建时间（Created），以及与笔记相关的超链接（Link）。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pic.yupoo.com/kols/AzfSUoJF/CRDKe.png&quot; title=&quot;orgcap3&quot;&gt;&lt;img src=&quot;http://pic.yupoo.com/kols/AzfSUoJF/medium.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这就是一条输入完毕的笔记的样子，之后需要做的就是按 &lt;code&gt;Ctrl-c&lt;/code&gt; 两次进行保存，当然如果写完后又觉得不需要了则可以
&lt;code&gt;Ctrl-c Ctrl-k&lt;/code&gt; 进行删除，而如果需要将笔记保存至默认文件外的其他文件中，则是按 &lt;code&gt;Ctrl-c Ctrl-w&lt;/code&gt; 进行
&lt;code&gt;refile&lt;/code&gt; 。
 到此整个笔记记录的流程就结束了，所写下的这条笔记会按照模板的预设被保存到相应的文件中去，在这里则是进入名为 &lt;code&gt;pieces.org&lt;/code&gt;
的文件中去，看下面这张图，它到了文件的最下面。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pic.yupoo.com/kols/Azg0yk72/dliE4.png&quot; title=&quot;orgcap4&quot;&gt;&lt;img src=&quot;http://pic.yupoo.com/kols/Azg0yk72/medium.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;整个过程中我始终关注要记录的是什么，而模板则解决了其他繁杂重复但仍有记录价值的部分（时间，标签，保存至相应文件等）。我只需要：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;快捷键呼出笔记介面&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;输入笔记&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;快捷键保存&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;其中1、3步需要做的只是敲击几下键盘，第2步则只关注并输入真正重要的内容，因此，整个过程是简单有效的。&lt;/p&gt;

&lt;p&gt;然而，高效的记录只是第一步。当笔记完成之后，特别是当笔记条目累积至一个较大的数目的时候，快速找到所需要的内容便成为一个亟须的功能，这也就是文章下一部分的内容——搜索。&lt;/p&gt;

&lt;h3&gt;搜索&lt;/h3&gt;

&lt;p&gt;搜索之所以重要是因为笔记就是用来记录那些不记下来便会忘记的内容，因此，笔记最重要的一个用处就是查阅，而在相当多的条目中光靠一般的全文搜索是比较难以快速准确地定位到某条特定内容的。
&lt;em&gt;Org-Mode&lt;/em&gt; 则提供了多种搜索方式，先来看其中的几个。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pic.yupoo.com/kols/AzirLsss/WkVtx.png&quot; title=&quot;orgsearch1&quot;&gt;&lt;img src=&quot;http://pic.yupoo.com/kols/AzirLsss/medium.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;按下 &lt;code&gt;Ctrl-c a&lt;/code&gt; 后下半窗口弹出的是 &lt;em&gt;Org-Mode&lt;/em&gt; 的日程命令，多数搜索命令也在其中，包括搜索标签、属性（ &lt;code&gt;m&lt;/code&gt;
)，包含关键词的条目（ &lt;code&gt;s&lt;/code&gt; ）以及所有关键词的位置（ &lt;code&gt;/&lt;/code&gt;
），这些搜索各适合不同的情况，标签搜索自然是比较快速的定位方法，但是若关键词不在标签中或根本没有使用标签则退而求其次直接搜索关键词，这样得到的结果可能比较多但是因为它支持正则表达式，如果活用应该也能相当方便的找到所需内容。而若需要定位关键词在
org 文件中所有出现的位置，则 &lt;code&gt;Multi-occur&lt;/code&gt;
是最好的方式。我常用的是前两种，它们都会定位到包含关键词的条目，这样浏览一下标题就基本能够找到需要的内容。
 下面看一下实际操作时的介面：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pic.yupoo.com/kols/AzirP9xU/DMGg2.png&quot; title=&quot;orgsearchmatch1&quot;&gt;&lt;img src=&quot;http://pic.yupoo.com/kols/AzirP9xU/medium.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这张图片匹配了标签中含有 &lt;code&gt;g1&lt;/code&gt; 的条目，通常我要备份手机里内容的时候就会查看那条 &lt;code&gt;g1 backup list&lt;/code&gt;
中记下的内容。另外画面最下方的 Mini buffer 中显示出了该条笔记在哪个文件的哪个标题的哪个小标题中，按 &lt;code&gt;Enter&lt;/code&gt; 或 &lt;code&gt;Tab&lt;/code&gt;
都可直接跳至该文件。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pic.yupoo.com/kols/AzirNuaY/4L0ez.png&quot; title=&quot;orgsearchkw1&quot;&gt;&lt;img src=&quot;http://pic.yupoo.com/kols/AzirNuaY/medium.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这是全文关键词搜索的结果，可以看到这里显示的条目要比标签搜索的结果多出一些，并且包含了一条明显与 &lt;em&gt;G1&lt;/em&gt; 无关的 &lt;em&gt;Python&lt;/em&gt;
笔记，这是因为那条笔记里也包含 &lt;code&gt;g1&lt;/code&gt; 这两个字符。同样下方也指名了该笔记的详细位置。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pic.yupoo.com/kols/AzirTyfv/FjFFR.png&quot; title=&quot;orgsearchmo1&quot;&gt;&lt;img src=&quot;http://pic.yupoo.com/kols/AzirTyfv/medium.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在这里所有 org 文件中包含 &lt;code&gt;g1&lt;/code&gt; 这两个字符的所有位置都被找了出来，包括标题与正文，左侧数字指明其在该文件第几行。&lt;/p&gt;

&lt;p&gt; 这就是 &lt;em&gt;Org-Mode&lt;/em&gt;
中的几种主要搜索方式，基本上可以很方便的找到所需的内容，当然搜索的质量也是与记录的质量相挂钩的，例如如果做好了每条笔记的标签工作，则能够在同时使用多个标签作为关键词的情况下迅速匹配出所需的条目。
 然而，除了这三个方法以外， &lt;em&gt;Org-Mode&lt;/em&gt; 另外还提供了一种名为 &lt;code&gt;Sparse tree&lt;/code&gt;
的搜索方法。这种方法的主要应用是在某个文件中迅速定位至所需内容并且自动隐藏其他的无关内容，比如这样：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pic.yupoo.com/kols/AzjvqRh7/16SBK.png&quot; title=&quot;orgsparsetree2&quot;&gt;&lt;img src=&quot;http://pic.yupoo.com/kols/AzjvqRh7/medium.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;关键词为 &lt;code&gt;fixme&lt;/code&gt;
，可以看到在图中被高亮了，概览中原本包含相当长的文本内容，现在全被隐藏了，只有与搜索条目相关的内容被显示了出来。从而，这个搜索方法比较适合定位至文件中某些做过标记的地方，当然，若用来搜索需要的内容也同样方便。&lt;/p&gt;

&lt;p&gt; 这样就总结了 &lt;em&gt;Org-Mode&lt;/em&gt;
中我所知道的几种搜索方式，它们各有各的适合用途，合理使用就能够快速找到所需的内容。而下面接着的话题则并非笔记中所必须的步骤，然而，它却是
一个实用的功能，也是 &lt;em&gt;Org-Mode&lt;/em&gt; 强大灵活的一个体现，也就是——笔记的导出。&lt;/p&gt;

&lt;h3&gt;导出（Export）&lt;/h3&gt;

&lt;p&gt;导出功能可以方便的将整理好的 org 文件转换成多种适合发布的文件类型，包括 HTML 、 PDF 、 DocBook
及其他多种格式，这里我只介绍自己经常用的 HTML 导出。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pic.yupoo.com/kols/AzpoHJdl/MoDF6.png&quot; title=&quot;orgexport1&quot;&gt;&lt;img src=&quot;http://pic.yupoo.com/kols/AzpoHJdl/medium.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;图中可看到 &lt;em&gt;Org-Mode&lt;/em&gt; 的导出功能很庞大，基本涵盖了所有实用的文件格式。&lt;/p&gt;

&lt;p&gt; 导出文件并不需要额外的操作，只需要输入导出命令（ &lt;code&gt;Ctrl-c Ctrl-e h&lt;/code&gt; ）即可，文件会自动被导出为 HTML
文件，但其只有基本的 CSS 格式，当然这可以通过简单地自定义相应的 CSS
文件来解决。另外在对包含源代码的文件进行导出操作时会自动为其高亮显示语法，效果与在 &lt;em&gt;Emacs&lt;/em&gt;
中的语法高亮完全一样，另外其针对源码还可先执行然后导出运行的结果，这对于诠释语法以及到达某些特殊需求有着相当大的作用。除此以外，还可以进行选择性导出，可以仅导出文件中的某些或某一部分内容，或者可以直接生成文件相应的
HTML 语法以适合在其他程序中发布（如 &lt;em&gt;WordPress&lt;/em&gt; ）。&lt;/p&gt;

&lt;p&gt; 不过导出只是整个发布环节中的第一步。在得到需要的文件后上传至相应服务器也是一件麻烦事，然而， &lt;em&gt;Org-Mode&lt;/em&gt;
却想到了这一步，提供发布（Publish）的功能，这样便能够自动化地完成从转换格式到上传文件乃至整个项目文件夹的复杂工作，相当便利。细心的人可以发现在上图的最下两行即是发布命令，相应的可以发布单一文件，发布整个项目，或发布所有项目。这些都只需在配置文件中做出相应设置即可，但这里不会涉及。&lt;/p&gt;

&lt;p&gt;最后，看一篇笔记输出并发布后的最终效果：&lt;a href=&quot;http://kdblue.com/notes/pythonotes.html&quot;&gt;Pythonotes&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 24 Oct 2010 00:00:00 +0800</pubDate>
        <link>http://kanedou.me/2010/10/note-with-orgmode/</link>
        <guid isPermaLink="true">http://kanedou.me/2010/10/note-with-orgmode/</guid>
      </item>
    
      <item>
        <title>Gentoo的SSH代理启动脚本</title>
        <description>&lt;p&gt;&lt;abbr title=&quot;Secure Shell&quot;&gt;SSH&lt;/abbr&gt; 代理是相当方便的翻墙工具，我因为不想用其他多余的工具来使用它，因此，出于方便，自己写了一个用于 Gentoo 下的 Initscript，需要的同学可以把下面这个文件放到 &lt;code&gt;/etc/init.d/sshtunnel&lt;/code&gt; 修改 &lt;code&gt;username&lt;/code&gt; 和 &lt;code&gt;remotehost&lt;/code&gt; 两个变量并新建一个软链 &lt;code&gt;/usr/bin/sshtn&lt;/code&gt; 至 &lt;code&gt;/usr/bin/ssh&lt;/code&gt;，最后使用 &lt;code&gt;sudo rc-update add sshtunnel default&lt;/code&gt; 来启用，默认端口7070。&lt;/p&gt;

&lt;!-- more --&gt;




&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sh&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/sbin/runscript&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#: Author: Kane Dou &amp;lt;douqilong@gmail.com&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#: Description: Create ssh tunnel to remote server to establish a socks proxy.&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;processname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;sshtn&amp;#39;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Symbolic link to /usr/bin/ssh to prevent&lt;/span&gt;
                    &lt;span class=&quot;c&quot;&gt;#+start-stop-daemon from stoping other ssh connections&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;qnTfND&amp;#39;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# q for quiet&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;#+n for output to /dev/null&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;#+T for no tty allocation&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;#+f for fork to background&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;#+N for no command execution&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;#+D for dynamic port forwarding&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;[ChangeMe]&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;remotehost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;[ChangeMe]&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;7070 &lt;span class=&quot;c&quot;&gt;# Change me maybe&lt;/span&gt;

depend&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    need net
    before NetworkManager
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

start&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    ebegin &lt;span class=&quot;s2&quot;&gt;&amp;quot;Starting SSH Tunnel&amp;quot;&lt;/span&gt;
    start-stop-daemon --start --quiet --name &lt;span class=&quot;s2&quot;&gt;&amp;quot;$processname&amp;quot;&lt;/span&gt;
    --exec /usr/bin/sshtn -- -&lt;span class=&quot;s2&quot;&gt;&amp;quot;$args&amp;quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$port&amp;quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$username&amp;quot;&lt;/span&gt;@&lt;span class=&quot;s2&quot;&gt;&amp;quot;$remotehost&amp;quot;&lt;/span&gt;
    eend &lt;span class=&quot;nv&quot;&gt;$?&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

stop&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    ebegin &lt;span class=&quot;s2&quot;&gt;&amp;quot;Stopping SSH Tunnel&amp;quot;&lt;/span&gt;
    start-stop-daemon --stop --quiet --name &lt;span class=&quot;s2&quot;&gt;&amp;quot;$processname&amp;quot;&lt;/span&gt;
    eend &lt;span class=&quot;nv&quot;&gt;$?&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

restart&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    ebegin &lt;span class=&quot;s2&quot;&gt;&amp;quot;Will restart SSH Tunnel&amp;quot;&lt;/span&gt;
    svc_stop
    sleep 3
    svc_start
    eend &lt;span class=&quot;nv&quot;&gt;$?&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# vim: set ft=gentoo-init-d ts=3 sw=3 et:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意，如果服务器会自动切断不活动的 SSH 连接，请在 &lt;code&gt;$HOME/.ssh/config&lt;/code&gt; 中加入：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Host [RemoteServerName]
ServerAliveInterval 60
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2011/04/28 Update: 又写了个 Debian 版本，&lt;a href=&quot;https://github.com/kols/util_scripts/blob/master/ssh_initscript/sshtunnel_debian&quot;&gt;这里&lt;/a&gt;找&lt;/p&gt;
</description>
        <pubDate>Thu, 30 Sep 2010 00:00:00 +0800</pubDate>
        <link>http://kanedou.me/2010/09/gentoo-ssh-proxy-initscript/</link>
        <guid isPermaLink="true">http://kanedou.me/2010/09/gentoo-ssh-proxy-initscript/</guid>
      </item>
    
  </channel>
</rss>
